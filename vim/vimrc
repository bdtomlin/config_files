let mapleader = ","
set tabstop=2 softtabstop=0 expandtab shiftwidth=2 smarttab
filetype plugin on
set mouse=a
filetype plugin indent on
set ignorecase
set smartcase
set nomodeline
set cursorline

nnoremap <leader>s :%s/
vnoremap <leader>c "*y
nnoremap <leader>c "*y
nnoremap <leader>v "*p
vnoremap <leader>v "*p
nnoremap <silent> ,/ :noh<cr>
nnoremap <silent> ,, :b#<cr>
nmap <c-o> o<esc>xk
nmap <c-i> O<esc>xj
inoremap <silent> jj <esc>

"set relativenumber
set number

if exists('&inccommand')
  set inccommand=split
endif

" Split Switching
if has('nvim')
  tnoremap <c-]> <C-\><C-n>
  tnoremap <c-h> <c-\><c-n><c-w>h
  tnoremap <c-j> <c-\><c-n><c-w>j
  tnoremap <c-k> <c-\><c-n><c-w>k
  tnoremap <c-l> <c-\><c-n><c-w>l
  nnoremap <c-h> <c-w>h
  nnoremap <c-j> <c-w>j
  nnoremap <c-k> <c-w>k
  nnoremap <c-l> <c-w>l
endif


" Minpac Plugins
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})
  command! PackUpdate call minpac#update()
  command! PackClean call minpac#clean()

call minpac#add('tpope/vim-surround')

call minpac#add('machakann/vim-highlightedyank')

call minpac#add('tpope/vim-sensible')
  if has('nvim')
    let g:loaded_sensible=0
  endif

call minpac#add('ctrlpvim/ctrlp.vim')
  nnoremap <C-f> :CtrlP<CR>
  nnoremap <C-b> :CtrlPBuffer<CR>
  let g:ctrlp_match_current_file=1
  set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
  let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
  let g:ctrlp_prompt_mappings = {
    \ 'PrtDeleteEnt()':       ['<c-d>']
    \ }

call minpac#add('qpkorr/vim-bufkill')
  nnoremap <leader>d :BD<CR>

" call minpac#add('wincent/command-t')
"   set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
"   nnoremap <leader>f :CommandT<CR>
"   nnoremap <leader>b :CommandTBuffer<CR>

call minpac#add('kassio/neoterm')
  " let g:neoterm_autoinsert = 1
  " put terminal in insert mode when you switch to it
  autocmd BufWinEnter,WinEnter term://* startinsert
  autocmd BufLeave term://* stopinsert
  " au BufEnter * if &buftype == 'terminal' | :startinsert | endif
  let g:neoterm_position='vertical'
  " hide/close terminal
  nnoremap <silent> <leader>nt :Ttoggle<cr>
  " clear terminal
  nnoremap <silent> <leader>nc :Tclose<cr>

call minpac#add('janko-m/vim-test')
  let test#strategy = "neoterm"
  nmap <silent> <leader>t :TestFile<CR>
  nmap <silent> <leader>T :TestNearest<CR>
  nmap <silent> <leader>a :TestSuite<CR>
  nmap <silent> <leader>l :TestLast<CR>
  nmap <silent> <leader>g :TestVisit<CR>

call minpac#add('jiangmiao/auto-pairs')

call minpac#add('scrooloose/nerdtree')
  nnoremap <leader>nn :NERDTreeToggle<CR>
  nnoremap <leader>nf :NERDTreeFind<CR>

call minpac#add('Xuyuanp/nerdtree-git-plugin')

" call minpac#add('jlanzarotta/bufexplorer')
  " switch to prev buffer and delete buffer
  " switched from. kill the buffer, not the split
  " nnoremap <leader>bb :ToggleBufExplorer<CR>
  " nnoremap <leader>bd :b#<bar>bd#<CR>

call minpac#add('tpope/vim-commentary')
call minpac#add('tpope/vim-rails')
call minpac#add('tpope/vim-endwise')
call minpac#add('ngmy/vim-rubocop')

call minpac#add('roxma/nvim-completion-manager')
call minpac#add('roxma/ncm-rct-complete')

call minpac#add('mattn/emmet-vim')
  let g:user_emmet_expandabbr_key = '<C-e>'
  let g:user_emmet_next_key = '<C-n>'
  let g:user_emmet_prev_key = '<C-p>'

call minpac#add('SirVer/ultisnips')
call minpac#add('honza/vim-snippets')
call minpac#add('nathanaelkane/vim-indent-guides')
  " let g:indent_guides_enable_on_vim_startup = 1 "default
  let g:indent_guides_guide_size = 2
  nmap<Leader>g :IndentGuidesToggle<CR>
  
" Colors..............................................................
syntax on
set termguicolors

call minpac#add('dracula/vim', {'type': 'opt'})
  " color dracula
call minpac#add('icymind/NeoSolarized', {'type': 'opt'})
  " let g:neosolarized_contrast="high"
  " let g:neosolarized_visibility="high"
  " let g:neosolarized_termtrans=1
  " let g:neosolarized_bold=1
  " let g:neosolarized_underline=1
  " let g:neosolarized_italic=1
  " set background=dark
  " color NeoSolarized
call minpac#add('jacoborus/tender.vim', {'type': 'opt'})
call minpac#add('rakr/vim-one', {'type': 'opt'})
  " set background=dark
  " let g:one_allow_italics = 1
  " color one
call minpac#add('KeitaNakamura/neodark.vim', {'type': 'opt'})
  " let g:neodark#background = '#1B202A'
  " let g:neodark#solid_vertsplit = 1
  " let g:neodark#use_custom_terminal_theme = 0
  " colorscheme neodark
  
" call minpac#add('tyrannicaltoucan/vim-deep-space', {'type': 'opt'}) "***********
  " let g:deepspace_italics=1
  " colorscheme deep-space

call minpac#add('bdtomlin/vim-deep-space', {'type': 'opt'}) "***********
  let g:deepspace_italics=1
  colorscheme deep-space

call minpac#add('christophermca/meta5', {'type': 'opt'})
  " colorscheme meta5

call minpac#add('whatyouhide/vim-gotham', {'type': 'opt'})
  " colorscheme gotham

call minpac#add('gosukiwi/vim-atom-dark', {'type': 'opt'})
  " colorscheme onehalfdark

call minpac#add('jakwings/vim-colors', {'type': 'opt'})
  " colorscheme garden
  " colorscheme messy
  " colorscheme moody

call minpac#add('nightsense/seabird', {'type': 'opt'})
  " colorscheme petrel

call minpac#add('tyrannicaltoucan/vim-quantum', {'type': 'opt'})
  " let g:quantum_black=1
  " let g:quantum_italics=1
  " let g:airline_theme='quantum'
  " set background=dark
  " colorscheme quantum

call minpac#add('rakr/vim-two-firewatch', {'type': 'opt'})
  " set background=dark
  " colorscheme quantum
