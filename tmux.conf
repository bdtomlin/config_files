# for iterm tmux
bind c new-window -c "$PWD"
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# end for iterm tmux

#### SETTINGS FOR REGULAR TMUX, NOT ITERM2 TMUX
# allow pbcopy/pbpase etc
# based on https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# copy and paste bindings
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# turn on mouse including scrolling
set -g mouse on
# hack for iterm2 ?
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

set  -g default-terminal "xterm-256color"

# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}" #rebind so it opens with current path
bind @ previous-window \; join-pane -h -s 1 \; swap-pane -s 0

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# navigate seemlessly between vim and tmux (http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits)
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# use vim motion keys while in copy mode
setw -g mode-keys vi
# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind = resize-pane -U 10
#--Status-Bar-------------------------------------------------------------------

#--Solarized Colours------------------------------------------------------------------

# default statusbar colors
set-option -g status-bg colour0
# text on status bar
set-option -g status-fg colour11
# unselected window
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour11
set-window-option -g window-status-bg default
# set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour3 #orange
set-window-option -g window-status-current-format '#[bold] #I:#W '
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour0
set-option -g pane-active-border-fg colour0

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green
